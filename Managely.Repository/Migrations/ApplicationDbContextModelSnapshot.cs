// <auto-generated />
using System;
using Managely.Repository.Shared;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Managely.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Managely.Domain.Models.Department", b =>
                {
                    b.Property<Guid>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = new Guid("4290bfc8-c384-4170-8143-262f2e548577"),
                            Description = "IT",
                            Name = "IT"
                        },
                        new
                        {
                            DepartmentId = new Guid("41f73399-28d0-4538-ae7a-84bc7a63b283"),
                            Description = "Finanzas",
                            Name = "Finance"
                        },
                        new
                        {
                            DepartmentId = new Guid("186c9446-cb0b-4db9-a216-fb5ff6c40e4f"),
                            Description = "Marketing",
                            Name = "Marketing"
                        },
                        new
                        {
                            DepartmentId = new Guid("a35650f2-5146-4263-b042-5755db7d2954"),
                            Description = "Ventas",
                            Name = "Sales"
                        },
                        new
                        {
                            DepartmentId = new Guid("0fb22393-69e8-47be-8fd3-7a8306e43c96"),
                            Description = "Recursos Humanos",
                            Name = "HumanResources"
                        },
                        new
                        {
                            DepartmentId = new Guid("4a82fd01-2301-4115-8d26-74168675aadd"),
                            Description = "Servicio al Cliente",
                            Name = "CustomerService"
                        },
                        new
                        {
                            DepartmentId = new Guid("7985a54b-9fe4-44eb-b8ea-25f047d2c970"),
                            Description = "Comité de Gobernación",
                            Name = "Board"
                        });
                });

            modelBuilder.Entity("Managely.Domain.Models.Employee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("JobPositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ReportsToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("JobPositionId");

                    b.HasIndex("ReportsToId");

                    b.HasIndex("RoleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Managely.Domain.Models.EmployeeTimeOff", b =>
                {
                    b.Property<Guid>("EmployeTimeOffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TimeOffId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EmployeTimeOffId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TimeOffId");

                    b.ToTable("EmployeeTimeOffs");
                });

            modelBuilder.Entity("Managely.Domain.Models.JobPosition", b =>
                {
                    b.Property<Guid>("JobPositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("JobPositionId");

                    b.ToTable("JobPositions");

                    b.HasData(
                        new
                        {
                            JobPositionId = new Guid("c789d06e-3e1d-4b54-a7c8-94c40532f8b3"),
                            Description = "Lider",
                            Name = "Head"
                        },
                        new
                        {
                            JobPositionId = new Guid("1a524604-9312-4d77-af7a-82070da3a447"),
                            Description = "Gerente",
                            Name = "Manager"
                        },
                        new
                        {
                            JobPositionId = new Guid("a307c0b9-d8d0-484f-8f44-c64a6530060a"),
                            Description = "Staff",
                            Name = "Staff"
                        },
                        new
                        {
                            JobPositionId = new Guid("ae475304-61fd-4e64-a000-089419f05c43"),
                            Description = "CEO",
                            Name = "CEO"
                        });
                });

            modelBuilder.Entity("Managely.Domain.Models.Permission", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("PermissionId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            PermissionId = new Guid("ca9b2b73-4235-42eb-9a3b-f1adc216b77b"),
                            Description = "Crear",
                            Name = "Create"
                        },
                        new
                        {
                            PermissionId = new Guid("b5ccdf0a-6887-4616-b2a1-6285a5a8c235"),
                            Description = "Editar",
                            Name = "Update"
                        },
                        new
                        {
                            PermissionId = new Guid("20c76f55-686f-40b2-a845-2cd0a95c41f4"),
                            Description = "Leer",
                            Name = "Read"
                        },
                        new
                        {
                            PermissionId = new Guid("0a26a041-2921-468a-b68f-2f9175e2224c"),
                            Description = "Eliminar",
                            Name = "Delete"
                        });
                });

            modelBuilder.Entity("Managely.Domain.Models.Role", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)");

                    b.Property<bool>("isEnabled")
                        .HasColumnType("bit");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("ba6e0189-891c-4081-b6fa-53665e56c1ee"),
                            Description = "Admin",
                            Name = "Admin",
                            isEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("f2cd6c6d-7a4a-40df-97e8-62f1e42a2944"),
                            Description = "Manager",
                            Name = "Manager",
                            isEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("8b8fdb6d-69ed-4bea-96d5-45147873cddb"),
                            Description = "Staff",
                            Name = "Staff",
                            isEnabled = true
                        });
                });

            modelBuilder.Entity("Managely.Domain.Models.RolePermission", b =>
                {
                    b.Property<Guid>("RolePermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RolePermissionId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            RolePermissionId = new Guid("fa171399-152c-46f6-83f1-ea7c09a65a9f"),
                            PermissionId = new Guid("ca9b2b73-4235-42eb-9a3b-f1adc216b77b"),
                            RoleId = new Guid("ba6e0189-891c-4081-b6fa-53665e56c1ee")
                        },
                        new
                        {
                            RolePermissionId = new Guid("f65bad2e-87b0-4be1-acda-ba82b4c88a65"),
                            PermissionId = new Guid("ca9b2b73-4235-42eb-9a3b-f1adc216b77b"),
                            RoleId = new Guid("f2cd6c6d-7a4a-40df-97e8-62f1e42a2944")
                        },
                        new
                        {
                            RolePermissionId = new Guid("65197d0d-8cf3-43f4-8df3-a9c1602bee63"),
                            PermissionId = new Guid("b5ccdf0a-6887-4616-b2a1-6285a5a8c235"),
                            RoleId = new Guid("ba6e0189-891c-4081-b6fa-53665e56c1ee")
                        },
                        new
                        {
                            RolePermissionId = new Guid("a233ea90-00e2-4838-b90b-f3b1b8c22ce8"),
                            PermissionId = new Guid("b5ccdf0a-6887-4616-b2a1-6285a5a8c235"),
                            RoleId = new Guid("f2cd6c6d-7a4a-40df-97e8-62f1e42a2944")
                        },
                        new
                        {
                            RolePermissionId = new Guid("0c0be631-f3e5-4390-8e9d-4428f35aaf89"),
                            PermissionId = new Guid("20c76f55-686f-40b2-a845-2cd0a95c41f4"),
                            RoleId = new Guid("ba6e0189-891c-4081-b6fa-53665e56c1ee")
                        },
                        new
                        {
                            RolePermissionId = new Guid("84626364-32d9-45b6-8a56-cbaa4f72e47d"),
                            PermissionId = new Guid("20c76f55-686f-40b2-a845-2cd0a95c41f4"),
                            RoleId = new Guid("f2cd6c6d-7a4a-40df-97e8-62f1e42a2944")
                        },
                        new
                        {
                            RolePermissionId = new Guid("01770bbe-eff2-4042-85bb-b826a7ed1dfe"),
                            PermissionId = new Guid("0a26a041-2921-468a-b68f-2f9175e2224c"),
                            RoleId = new Guid("ba6e0189-891c-4081-b6fa-53665e56c1ee")
                        },
                        new
                        {
                            RolePermissionId = new Guid("e23b0d0a-946d-48ca-930c-38279c55e77e"),
                            PermissionId = new Guid("0a26a041-2921-468a-b68f-2f9175e2224c"),
                            RoleId = new Guid("f2cd6c6d-7a4a-40df-97e8-62f1e42a2944")
                        },
                        new
                        {
                            RolePermissionId = new Guid("335f1cf0-c0fe-4710-b3cd-525912492a0a"),
                            PermissionId = new Guid("20c76f55-686f-40b2-a845-2cd0a95c41f4"),
                            RoleId = new Guid("8b8fdb6d-69ed-4bea-96d5-45147873cddb")
                        });
                });

            modelBuilder.Entity("Managely.Domain.Models.TimeOff", b =>
                {
                    b.Property<Guid>("TimeOffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)");

                    b.Property<DateTime>("ThruDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TimeOffId");

                    b.ToTable("TimeOffs");
                });

            modelBuilder.Entity("Managely.Domain.Models.Employee", b =>
                {
                    b.HasOne("Managely.Domain.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Managely.Domain.Models.JobPosition", "JobPosition")
                        .WithMany("Employees")
                        .HasForeignKey("JobPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Managely.Domain.Models.Employee", "ReportsTo")
                        .WithMany()
                        .HasForeignKey("ReportsToId");

                    b.HasOne("Managely.Domain.Models.Role", "Role")
                        .WithMany("Employee")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("JobPosition");

                    b.Navigation("ReportsTo");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Managely.Domain.Models.EmployeeTimeOff", b =>
                {
                    b.HasOne("Managely.Domain.Models.Employee", "Employee")
                        .WithMany("EmployeeTimeOffs")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Managely.Domain.Models.TimeOff", "TimeOff")
                        .WithMany("EmployeeTimeOffs")
                        .HasForeignKey("TimeOffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("TimeOff");
                });

            modelBuilder.Entity("Managely.Domain.Models.RolePermission", b =>
                {
                    b.HasOne("Managely.Domain.Models.Permission", "Permission")
                        .WithMany("RolePermission")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Managely.Domain.Models.Role", "Role")
                        .WithMany("RolePermission")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Managely.Domain.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Managely.Domain.Models.Employee", b =>
                {
                    b.Navigation("EmployeeTimeOffs");
                });

            modelBuilder.Entity("Managely.Domain.Models.JobPosition", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Managely.Domain.Models.Permission", b =>
                {
                    b.Navigation("RolePermission");
                });

            modelBuilder.Entity("Managely.Domain.Models.Role", b =>
                {
                    b.Navigation("Employee");

                    b.Navigation("RolePermission");
                });

            modelBuilder.Entity("Managely.Domain.Models.TimeOff", b =>
                {
                    b.Navigation("EmployeeTimeOffs");
                });
#pragma warning restore 612, 618
        }
    }
}
