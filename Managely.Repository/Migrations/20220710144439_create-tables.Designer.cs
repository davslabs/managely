// <auto-generated />
using System;
using Managely.Repository.Shared;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Managely.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220710144439_create-tables")]
    partial class createtables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Managely.Domain.Models.Department", b =>
                {
                    b.Property<Guid>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = new Guid("e222d8fc-69b6-47da-a94e-9d6c6b017278"),
                            Description = "IT",
                            Name = "IT"
                        },
                        new
                        {
                            DepartmentId = new Guid("314b9b19-763e-4065-888f-aa5ba38b3f7a"),
                            Description = "Finanzas",
                            Name = "Finance"
                        },
                        new
                        {
                            DepartmentId = new Guid("c3f9f08c-bca7-4f15-ab75-686ebfd39b37"),
                            Description = "Marketing",
                            Name = "Marketing"
                        },
                        new
                        {
                            DepartmentId = new Guid("7634e360-6477-4775-9990-7de1cff73cc1"),
                            Description = "Ventas",
                            Name = "Sales"
                        },
                        new
                        {
                            DepartmentId = new Guid("104e3817-f5db-4827-8874-70ccebe8ef45"),
                            Description = "Recursos Humanos",
                            Name = "HumanResources"
                        },
                        new
                        {
                            DepartmentId = new Guid("cbba8167-0f34-4de3-86c9-687d7ecbcddf"),
                            Description = "Servicio al Cliente",
                            Name = "CustomerService"
                        },
                        new
                        {
                            DepartmentId = new Guid("2038d67f-3cb7-4a07-add8-e69c9dea629c"),
                            Description = "Comité de Gobernación",
                            Name = "Board"
                        });
                });

            modelBuilder.Entity("Managely.Domain.Models.Employee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("JobPositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ReportsToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("JobPositionId");

                    b.HasIndex("ReportsToId");

                    b.HasIndex("RoleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Managely.Domain.Models.EmployeeTimeOff", b =>
                {
                    b.Property<Guid>("EmployeTimeOffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TimeOffId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EmployeTimeOffId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TimeOffId");

                    b.ToTable("EmployeeTimeOffs");
                });

            modelBuilder.Entity("Managely.Domain.Models.JobPosition", b =>
                {
                    b.Property<Guid>("JobPositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("JobPositionId");

                    b.ToTable("JobPositions");

                    b.HasData(
                        new
                        {
                            JobPositionId = new Guid("8ae3a1f7-e20b-4321-af64-5f1ffc7673c8"),
                            Description = "Lider",
                            Name = "Head"
                        },
                        new
                        {
                            JobPositionId = new Guid("5cc7f86c-2490-4a77-8dc2-cca090c5c917"),
                            Description = "Gerente",
                            Name = "Manager"
                        },
                        new
                        {
                            JobPositionId = new Guid("81655a6c-f0a6-4f85-8a9e-2cbf65f58ac5"),
                            Description = "Staff",
                            Name = "Staff"
                        },
                        new
                        {
                            JobPositionId = new Guid("934fe9d3-13c5-4c99-8c67-92c518faf9de"),
                            Description = "CEO",
                            Name = "CEO"
                        });
                });

            modelBuilder.Entity("Managely.Domain.Models.Permission", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("PermissionId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            PermissionId = new Guid("37536f0d-2cfd-4c7c-9f0f-ec4e118ed7e5"),
                            Description = "Crear",
                            Name = "Create"
                        },
                        new
                        {
                            PermissionId = new Guid("2c4c534f-7413-4f74-a716-becd91bdea86"),
                            Description = "Editar",
                            Name = "Update"
                        },
                        new
                        {
                            PermissionId = new Guid("cfaae55f-0424-4ba9-887b-9defed6c9835"),
                            Description = "Leer",
                            Name = "Read"
                        },
                        new
                        {
                            PermissionId = new Guid("0bf24c64-faff-4c70-a5f6-b39ad14d1893"),
                            Description = "Eliminar",
                            Name = "Delete"
                        });
                });

            modelBuilder.Entity("Managely.Domain.Models.Role", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)");

                    b.Property<bool>("isEnabled")
                        .HasColumnType("bit");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("03c74fb1-c1e8-4908-9d1c-d102e688e713"),
                            Description = "Admin",
                            Name = "Admin",
                            isEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("71277fc9-eed2-4296-8526-452376d76b21"),
                            Description = "Manager",
                            Name = "Manager",
                            isEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("c7730fd5-0520-4eb3-8857-ba673e55f3b2"),
                            Description = "Staff",
                            Name = "Staff",
                            isEnabled = true
                        });
                });

            modelBuilder.Entity("Managely.Domain.Models.RolePermission", b =>
                {
                    b.Property<Guid>("RolePermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RolePermissionId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            RolePermissionId = new Guid("74d0d4b4-28f3-4586-8a24-9292e1289546"),
                            PermissionId = new Guid("37536f0d-2cfd-4c7c-9f0f-ec4e118ed7e5"),
                            RoleId = new Guid("03c74fb1-c1e8-4908-9d1c-d102e688e713")
                        },
                        new
                        {
                            RolePermissionId = new Guid("32e34e30-4736-4c6a-8127-d72a0131429c"),
                            PermissionId = new Guid("37536f0d-2cfd-4c7c-9f0f-ec4e118ed7e5"),
                            RoleId = new Guid("71277fc9-eed2-4296-8526-452376d76b21")
                        },
                        new
                        {
                            RolePermissionId = new Guid("c3e41618-bc75-4135-ab5f-35e25afde882"),
                            PermissionId = new Guid("2c4c534f-7413-4f74-a716-becd91bdea86"),
                            RoleId = new Guid("03c74fb1-c1e8-4908-9d1c-d102e688e713")
                        },
                        new
                        {
                            RolePermissionId = new Guid("806202b5-1878-482c-bcd1-dc85e727999a"),
                            PermissionId = new Guid("2c4c534f-7413-4f74-a716-becd91bdea86"),
                            RoleId = new Guid("71277fc9-eed2-4296-8526-452376d76b21")
                        },
                        new
                        {
                            RolePermissionId = new Guid("5e18e688-9e7e-4907-898f-9b005547e499"),
                            PermissionId = new Guid("cfaae55f-0424-4ba9-887b-9defed6c9835"),
                            RoleId = new Guid("03c74fb1-c1e8-4908-9d1c-d102e688e713")
                        },
                        new
                        {
                            RolePermissionId = new Guid("42e5e386-9b0d-4525-af81-91308abc7f3f"),
                            PermissionId = new Guid("cfaae55f-0424-4ba9-887b-9defed6c9835"),
                            RoleId = new Guid("71277fc9-eed2-4296-8526-452376d76b21")
                        },
                        new
                        {
                            RolePermissionId = new Guid("c3a7cea6-5331-4819-ba05-621f69d3e805"),
                            PermissionId = new Guid("0bf24c64-faff-4c70-a5f6-b39ad14d1893"),
                            RoleId = new Guid("03c74fb1-c1e8-4908-9d1c-d102e688e713")
                        },
                        new
                        {
                            RolePermissionId = new Guid("ee36c83c-046f-484f-be1e-f44df5473c25"),
                            PermissionId = new Guid("0bf24c64-faff-4c70-a5f6-b39ad14d1893"),
                            RoleId = new Guid("71277fc9-eed2-4296-8526-452376d76b21")
                        },
                        new
                        {
                            RolePermissionId = new Guid("62f770a8-3e8c-4699-aab0-07188b7fb98e"),
                            PermissionId = new Guid("cfaae55f-0424-4ba9-887b-9defed6c9835"),
                            RoleId = new Guid("c7730fd5-0520-4eb3-8857-ba673e55f3b2")
                        });
                });

            modelBuilder.Entity("Managely.Domain.Models.TimeOff", b =>
                {
                    b.Property<Guid>("TimeOffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)");

                    b.Property<DateTime>("ThruDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TimeOffId");

                    b.ToTable("TimeOffs");
                });

            modelBuilder.Entity("Managely.Domain.Models.Employee", b =>
                {
                    b.HasOne("Managely.Domain.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Managely.Domain.Models.JobPosition", "JobPosition")
                        .WithMany("Employees")
                        .HasForeignKey("JobPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Managely.Domain.Models.Employee", "ReportsTo")
                        .WithMany()
                        .HasForeignKey("ReportsToId");

                    b.HasOne("Managely.Domain.Models.Role", "Role")
                        .WithMany("Employee")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("JobPosition");

                    b.Navigation("ReportsTo");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Managely.Domain.Models.EmployeeTimeOff", b =>
                {
                    b.HasOne("Managely.Domain.Models.Employee", "Employee")
                        .WithMany("EmployeeTimeOffs")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Managely.Domain.Models.TimeOff", "TimeOff")
                        .WithMany("EmployeeTimeOffs")
                        .HasForeignKey("TimeOffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("TimeOff");
                });

            modelBuilder.Entity("Managely.Domain.Models.RolePermission", b =>
                {
                    b.HasOne("Managely.Domain.Models.Permission", null)
                        .WithMany("RolePermission")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Managely.Domain.Models.Role", null)
                        .WithMany("RolePermission")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Managely.Domain.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Managely.Domain.Models.Employee", b =>
                {
                    b.Navigation("EmployeeTimeOffs");
                });

            modelBuilder.Entity("Managely.Domain.Models.JobPosition", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Managely.Domain.Models.Permission", b =>
                {
                    b.Navigation("RolePermission");
                });

            modelBuilder.Entity("Managely.Domain.Models.Role", b =>
                {
                    b.Navigation("Employee");

                    b.Navigation("RolePermission");
                });

            modelBuilder.Entity("Managely.Domain.Models.TimeOff", b =>
                {
                    b.Navigation("EmployeeTimeOffs");
                });
#pragma warning restore 612, 618
        }
    }
}
